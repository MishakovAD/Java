/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.10
 * Generated at: 2018-08-21 07:34:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;

public final class registration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/resources/js/login.js", Long.valueOf(1531909744000L));
    _jspx_dependants.put("jar:file:/E:/Java/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/niikp/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153370682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1533280530523L));
    _jspx_dependants.put("/resources/css/login.css", Long.valueOf(1534835662685L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<!-- Подключение js и css только таким образом! -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    ");
      out.write("$('.message a').click(function(){\r\n");
      out.write("   $('form').animate({height: \"toggle\", opacity: \"toggle\"}, \"slow\");\r\n");
      out.write("});");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    ");
      out.write(".login-page {\r\n");
      out.write("  width: 360px;\r\n");
      out.write("  height: 100px;\r\n");
      out.write("  padding: 8% 0 0;\r\n");
      out.write("  margin: auto;\r\n");
      out.write("}\r\n");
      out.write(".form {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  z-index: 1;\r\n");
      out.write("  background: #FFFFFF;\r\n");
      out.write("  max-width: 360px;\r\n");
      out.write("  margin: 0 auto 100px;\r\n");
      out.write("  padding: 45px;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\r\n");
      out.write("}\r\n");
      out.write(".form input {\r\n");
      out.write("  font-family: \"Roboto\", sans-serif;\r\n");
      out.write("  outline: 0;\r\n");
      out.write("  background: #f2f2f2;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  border: 0;\r\n");
      out.write("  margin: 0 0 15px;\r\n");
      out.write("  padding: 15px;\r\n");
      out.write("  box-sizing: border-box;\r\n");
      out.write("  font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write(".form button {\r\n");
      out.write("  font-family: \"Roboto\", sans-serif;\r\n");
      out.write("  text-transform: uppercase;\r\n");
      out.write("  outline: 0;\r\n");
      out.write("  background: #4CAF50;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  border: 0;\r\n");
      out.write("  padding: 15px;\r\n");
      out.write("  color: #FFFFFF;\r\n");
      out.write("  font-size: 14px;\r\n");
      out.write("  -webkit-transition: all 0.3 ease;\r\n");
      out.write("  transition: all 0.3 ease;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write(".form button:hover,.form button:active,.form button:focus {\r\n");
      out.write("  background: #43A047;\r\n");
      out.write("}\r\n");
      out.write(".form .message {\r\n");
      out.write("  margin: 15px 0 0;\r\n");
      out.write("  color: #b3b3b3;\r\n");
      out.write("  font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write(".form .message a {\r\n");
      out.write("  color: #4CAF50;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write(".form .register-form {\r\n");
      out.write("  display: none;\r\n");
      out.write("}\r\n");
      out.write(".container {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  z-index: 1;\r\n");
      out.write("  max-width: 300px;\r\n");
      out.write("  margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write(".container:before, .container:after {\r\n");
      out.write("  content: \"\";\r\n");
      out.write("  display: block;\r\n");
      out.write("  clear: both;\r\n");
      out.write("}\r\n");
      out.write(".container .info {\r\n");
      out.write("  margin: 50px auto;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("}\r\n");
      out.write(".container .info h1 {\r\n");
      out.write("  margin: 0 0 15px;\r\n");
      out.write("  padding: 0;\r\n");
      out.write("  font-size: 36px;\r\n");
      out.write("  font-weight: 300;\r\n");
      out.write("  color: #1a1a1a;\r\n");
      out.write("}\r\n");
      out.write(".container .info span {\r\n");
      out.write("  color: #4d4d4d;\r\n");
      out.write("  font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write(".container .info span a {\r\n");
      out.write("  color: #000000;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write(".container .info span .fa {\r\n");
      out.write("  color: #EF3B3A;\r\n");
      out.write("}\r\n");
      out.write("body {\r\n");
      out.write("  background: #76b852; /* fallback for old browsers */\r\n");
      out.write("  background: -webkit-linear-gradient(right, #76b852, #8DC26F);\r\n");
      out.write("  background: -moz-linear-gradient(right, #76b852, #8DC26F);\r\n");
      out.write("  background: -o-linear-gradient(right, #76b852, #8DC26F);\r\n");
      out.write("  background: linear-gradient(to left, #76b852, #8DC26F);\r\n");
      out.write("  font-family: \"Roboto\", sans-serif;\r\n");
      out.write("  -webkit-font-smoothing: antialiased;\r\n");
      out.write("  -moz-osx-font-smoothing: grayscale;      \r\n");
      out.write("}");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Update</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"login-page\">\r\n");
      out.write("<div class=\"form\">\r\n");
      out.write("\t\t<form method=\"post\" action=\"registration?action=submit\" class=\"login-form\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" required name=\"email\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userProfile.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Login\" />\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" required name=\"password\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userProfile.password}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Пароль\" />\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"name\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userProfile.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Имя\" />\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"secondName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userProfile.secondName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Фамилия\" />\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"middleName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userProfile.middleName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Отчество\" />\r\n");
      out.write("\t\t\t\t\t<input type=\"date\" required name=\"birthday\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userProfile.birthday}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Дата Рождения\" />\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"phoneNumber\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userProfile.phoneNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Номер телефона\" />\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"roomNumber\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userProfile.roomNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Номер комнаты\" />\r\n");
      out.write("\t\t\t\t\t<select name=\"userGroup\" style=\"width: 269px; height: 35px;\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t");
 
						ArrayList<String> typeMail = (ArrayList<String>) request.getAttribute("groupList");
							for (String values : typeMail) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print( values );
      out.write('"');
      out.write('>');
      out.print( values );
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("    \t\t\t\t</select></p> \r\n");
      out.write("\t\t\t<button type=\"submit\">Регистрация</button>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
